<tool id="pm_muairss_write" name="Generate muon structures (pm-muairss)" version="0.1.0" python_template_version="3.5">
    <requirements>
        <requirement type="package">pymuon-suite</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        pip show pymuon-suite || ( git clone https://github.com/muon-spectroscopy-computational-project/pymuon-suite /tmp/pymuon-suite && pip install /tmp/pymuon-suite && rm -rf /tmp/pymuon-suite) &&
        ln -s $structure input.cell &&
        ln -s $params params.yaml &&
        #if str($iscastep.iscastep_sel)=="true":
            ln -s $castep_param $castep_param.name &&
        #end if
        sed -i "s#^castep_param: .*#castep_param: .\/$castep_param.name#g" params.yaml &&
        pm-muairss -t w input.cell params.yaml &&
        out_folder="`python ${__tool_directory__}/get_out_folder.py`" &&
        #if str($iscastep.iscastep_sel)=="true":
            zip -r out_zip.zip \$out_folder params.yaml input.cell $castep_param.name &&
        #else if str($iscastep.iscastep_sel)=="false":
            zip -r out_zip.zip \$out_folder params.yaml input.cell &&
        #end if
        find \$out_folder > tree.txt
    ]]></command>
    <inputs>
        <param type="data" name="structure" format="cell" />
        <param type="data" name="params" format="txt" />
    <conditional name="iscastep">
        <param type="boolean" value="false" name="iscastep_sel" label="Is the calculator castep?">
            <option value="false">no</option>
            <option value="true">yes</option>
        </param>   
        <when value="true">
            <param type="data" name="castep_param" format="txt" />
        </when>
    </conditional>
    </inputs>
    <outputs>
        <data label="muonated $structure.name using $params.name" name="out_zip" format="zip" from_work_dir="out_zip.zip"/>
        <data label="file tree for testing" name="file_tree" format="txt" from_work_dir="tree.txt" hidden="true"/>
    </outputs>
    <tests>
        <test>
            <param name="structure" value="Si.cell" ftype="txt"/>
            <param name="params" value="Si-muairss-castep-with-out-folder.yaml" ftype="txt"/>
            <output name="file_tree" file="tree.txt" ftype="txt" compare="sim_size" delta="350"/>
        </test>
        <test>
            <param name="structure" value="Si.cell" ftype="txt"/>
            <param name="params" value="Si-muairss-castep-no-out-folder.yaml" ftype="txt"/>
            <output name="file_tree" file="tree.txt" ftype="txt" compare="sim_size" delta="350"/>
        </test>
    </tests>
    <help><![CDATA[
        usage: pm-muairss [-h] [-t {r,w}] structures parameter_file

        Given an input structure, generates a set of structures with a muon added in a random location.
    ]]></help>
    <citations>
        <citation type="bibtex">
@misc{github,
  author = {Muon Spectroscopy Computational Project},
  year = {2021},
  title = {pymuon-suite},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/muon-spectroscopy-computational-project/pymuon-suite/},
}</citation>
    </citations>
</tool>